# Generated by Django 3.2.15 on 2022-10-07 12:43

import app.utils.user
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0063_auto_20221007_1238'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='cardactivemystery',
            options={},
        ),
        migrations.AlterModelOptions(
            name='carddeck',
            options={},
        ),
        migrations.AlterModelOptions(
            name='cardgraveyard',
            options={},
        ),
        migrations.AlterModelOptions(
            name='cardhand',
            options={},
        ),
        migrations.AlterModelOptions(
            name='control',
            options={},
        ),
        migrations.AlterModelOptions(
            name='tile',
            options={},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={},
        ),
        migrations.RemoveIndex(
            model_name='blockedcardsingamemode',
            name='blocked_cards_in_game_mode_idx',
        ),
        migrations.AlterField(
            model_name='arena',
            name='name',
            field=models.CharField(max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name='battle',
            name='player_1_ticket',
            field=models.CharField(blank=True, max_length=40, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='battle',
            name='player_2_ticket',
            field=models.CharField(blank=True, max_length=40, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='battle',
            name='state',
            field=models.CharField(choices=[('CREATED', 'created'), ('JOINED', 'joined'), ('CLOSED', 'closed'), ('ACTIVE', 'active'), ('COMPLETED', 'completed'), ('DISCARDED', 'discarded'), ('AWAITING_RECONNECT', 'awaiting_reconnect')], default='CREATED', max_length=32),
        ),
        migrations.AlterField(
            model_name='card',
            name='custom_id',
            field=models.CharField(default='0', max_length=64, unique=True, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='cardseries',
            name='name',
            field=models.CharField(max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name='clientversion',
            name='version',
            field=models.CharField(max_length=16, unique=True),
        ),
        migrations.AlterField(
            model_name='gamemode',
            name='description',
            field=models.CharField(max_length=512, unique=True),
        ),
        migrations.AlterField(
            model_name='gamemode',
            name='title',
            field=models.CharField(max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='minion',
            name='name',
            field=models.CharField(max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='minion',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='player',
            name='player_id',
            field=models.CharField(default=app.utils.user.generate_random_player_id, max_length=16, unique=True),
        ),
        migrations.AddIndex(
            model_name='battle',
            index=models.Index(fields=['state'], name='battle_state_idx'),
        ),
        migrations.AddIndex(
            model_name='battle',
            index=models.Index(fields=['game_mode'], name='battle_game_mode_idx'),
        ),
        migrations.AddIndex(
            model_name='battle',
            index=models.Index(fields=['battle_end'], name='battle_battle_end_idx'),
        ),
        migrations.AddIndex(
            model_name='battle',
            index=models.Index(fields=['winner'], name='battle_winner_idx'),
        ),
        migrations.AddIndex(
            model_name='battle',
            index=models.Index(fields=['room_id'], name='battle_room_id_idx'),
        ),
        migrations.AddIndex(
            model_name='battleplayer',
            index=models.Index(fields=['battle'], name='battle_player_battle_idx'),
        ),
        migrations.AddIndex(
            model_name='battleplayer',
            index=models.Index(fields=['player'], name='battle_player_idx'),
        ),
        migrations.AddIndex(
            model_name='battleplayer',
            index=models.Index(fields=['player_id'], name='battle_player_id_idx'),
        ),
        migrations.AddIndex(
            model_name='card',
            index=models.Index(fields=['targeting_type'], name='card_targeting_type_idx'),
        ),
        migrations.AddIndex(
            model_name='card',
            index=models.Index(fields=['is_enabled'], name='card_is_enabled_idx'),
        ),
        migrations.AddIndex(
            model_name='cardactivemystery',
            index=models.Index(fields=['player'], name='card_mystery_player_idx'),
        ),
        migrations.AddIndex(
            model_name='cardactivemystery',
            index=models.Index(fields=['card'], name='card_mystery_card_idx'),
        ),
        migrations.AddIndex(
            model_name='carddeck',
            index=models.Index(fields=['player'], name='card_deck_player_idx'),
        ),
        migrations.AddIndex(
            model_name='carddeck',
            index=models.Index(fields=['card'], name='card_deck_card_idx'),
        ),
        migrations.AddIndex(
            model_name='cardgraveyard',
            index=models.Index(fields=['player'], name='card_graveyard_player_idx'),
        ),
        migrations.AddIndex(
            model_name='cardgraveyard',
            index=models.Index(fields=['card'], name='card_graveyard_card_idx'),
        ),
        migrations.AddIndex(
            model_name='cardhand',
            index=models.Index(fields=['player'], name='card_hand_player_idx'),
        ),
        migrations.AddIndex(
            model_name='cardhand',
            index=models.Index(fields=['card'], name='card_hand_card_idx'),
        ),
        migrations.AddIndex(
            model_name='clientversion',
            index=models.Index(fields=['is_currently_selected'], name='is_currently_selected_idx'),
        ),
        migrations.AddIndex(
            model_name='control',
            index=models.Index(fields=['tile'], name='control_tile_idx'),
        ),
        migrations.AddIndex(
            model_name='customdeck',
            index=models.Index(fields=['player'], name='custom_deck_player_idx'),
        ),
        migrations.AddIndex(
            model_name='customdecktocard',
            index=models.Index(fields=['player_card'], name='custom_deck_to_card_idx'),
        ),
        migrations.AddIndex(
            model_name='customdecktocard',
            index=models.Index(fields=['deck'], name='custom_deck_to_card_deck_idx'),
        ),
        migrations.AddIndex(
            model_name='enchantment',
            index=models.Index(fields=['keyword'], name='enchantment_keyword_idx'),
        ),
        migrations.AddIndex(
            model_name='enchantment',
            index=models.Index(fields=['tile'], name='enchantment_tile_idx'),
        ),
        migrations.AddIndex(
            model_name='enchantment',
            index=models.Index(fields=['turns'], name='enchantment_turns_idx'),
        ),
        migrations.AddIndex(
            model_name='enchantment',
            index=models.Index(fields=['player'], name='enchantment_player_idx'),
        ),
        migrations.AddIndex(
            model_name='enchantment',
            index=models.Index(fields=['affects_attack'], name='enchantment_affects_attack_idx'),
        ),
        migrations.AddIndex(
            model_name='enchantment',
            index=models.Index(fields=['type'], name='enchantment_type_idx'),
        ),
        migrations.AddIndex(
            model_name='enchantment',
            index=models.Index(fields=['attack_change_value'], name='enchantment_attack_change_idx'),
        ),
        migrations.AddIndex(
            model_name='friendship',
            index=models.Index(fields=['friend'], name='friendship_friend_idx'),
        ),
        migrations.AddIndex(
            model_name='friendship',
            index=models.Index(fields=['player'], name='friendship_player_idx'),
        ),
        migrations.AddIndex(
            model_name='friendship',
            index=models.Index(fields=['is_accepted'], name='friendship_is_accepted_idx'),
        ),
        migrations.AddIndex(
            model_name='friendship',
            index=models.Index(fields=['sender'], name='friendship_sender_idx'),
        ),
        migrations.AddIndex(
            model_name='gamemode',
            index=models.Index(fields=['default_game_mode'], name='default_game_mode_idx'),
        ),
        migrations.AddIndex(
            model_name='gamemode',
            index=models.Index(fields=['earn_skill_points_in_this_mode'], name='earn_skill_points_idx'),
        ),
        migrations.AddIndex(
            model_name='player',
            index=models.Index(fields=['user'], name='player_user_idx'),
        ),
        migrations.AddIndex(
            model_name='player',
            index=models.Index(fields=['is_gitex_bull'], name='player_is_gitex_bull_idx'),
        ),
        migrations.AddIndex(
            model_name='player',
            index=models.Index(fields=['is_gitex_bear'], name='player_is_gitex_bear_idx'),
        ),
        migrations.AddIndex(
            model_name='playercard',
            index=models.Index(fields=['player'], name='player_card_player_idx'),
        ),
        migrations.AddIndex(
            model_name='playercard',
            index=models.Index(fields=['card'], name='player_card_card_idx'),
        ),
        migrations.AddIndex(
            model_name='playercard',
            index=models.Index(fields=['edition'], name='friendship_edition_idx'),
        ),
        migrations.AddIndex(
            model_name='playerseasonstats',
            index=models.Index(fields=['player'], name='player_season_stats_player_idx'),
        ),
        migrations.AddIndex(
            model_name='playerseasonstats',
            index=models.Index(fields=['season'], name='player_season_stats_season_idx'),
        ),
        migrations.AddIndex(
            model_name='tile',
            index=models.Index(fields=['player'], name='tile_player_idx'),
        ),
        migrations.AddIndex(
            model_name='tile',
            index=models.Index(fields=['card'], name='tile_card_idx'),
        ),
        migrations.AddIndex(
            model_name='tile',
            index=models.Index(fields=['element'], name='tile_element_idx'),
        ),
        migrations.AddIndex(
            model_name='tile',
            index=models.Index(fields=['state'], name='tile_state_idx'),
        ),
        migrations.AddIndex(
            model_name='trace',
            index=models.Index(fields=['traceback_hash'], name='traceback_hash_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='user_username_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['metamask_token'], name='user_metamask_token_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='user_email_idx'),
        ),
    ]
